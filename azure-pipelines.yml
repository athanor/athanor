
trigger:
  branches:
    include:
    - 'refs/tags/release_v*'
    - master
jobs:
- job: BuildAndTestAthanor
  displayName: Build athanor and run tests
  timeoutInMinutes: 0
  strategy:
    matrix:
      Linux:
        imageName: 'ubuntu-latest'
        os: linux
        compiler: clang++
        conjureFolder: conjure-v2.3.0-linux-ubuntu1604
      Mac:
        imageName: 'macos-latest'
        os: mac
        compiler: clang++
        conjureFolder: conjure-v2.3.0-macos


  pool:
    vmImage: $(imageName)
  steps:
  # - bash: CXX=$(compiler) make -j4
    # displayName: "Build Athanor"
  - bash: rm -rf temp && mkdir temp && cd temp && wget https://github.com/conjure-cp/conjure/releases/download/v2.3.0/$(conjureFolder).zip && unzip $(conjureFolder).zip
    displayName: "Downloading Conjure"
  # - bash: export PATH="$PWD/temp/$(conjureFolder):${PATH}" ; echo "path is $PATH" ; which conjure ; conjure ; cd tests && ./runAll.sh skipSanityCheck useReleaseBuild dumpFilesOnError
    # displayName: "Running tests"
  - bash: scripts/makeRelease.sh "$(Build.ArtifactStagingDirectory)" "$(Build.SourceBranch)" $(os) "$conjureFolder/conjure"
    displayName: "Compiling release assets for $(os)"
    condition: startsWith(variables['Build.SourceBranch'], 'refs/tags/release_v')

- job: release-check
  displayName: Check for release actions
  dependsOn: BuildAndTestAthanor
  pool:
    vmImage: 'ubuntu-16.04'
  steps:
  - task: GitHubRelease@0
    displayName: 'Create GitHub Release'    
    condition: startsWith(variables['Build.SourceBranch'], 'refs/tags/release_v')   
    inputs:
      gitHubConnection: athanor-release
      repositoryName: '$(Build.Repository.Name)' 
      action: 'create' # Options: create, edit, delete
      target: '$(Build.SourceVersion)' # Required when action == Create || Action == Edit
      tagSource: 'auto' # Required when action == Create# Options: auto, manual
      #tagPattern: # Optional
      #tag: # Required when action == Edit || Action == Delete || TagSource == Manual
      #title: # Optional
      releaseNotesSource: 'file' # Optional. Options: file, input
      # releaseNotesFile: 'release-notes.txt' # Optional
      #releaseNotes: "Automated release" # Optional
      # assets: 
      #assetUploadMode: 'delete' # Optional. Options: delete, replace
      isDraft: true # Optional
      #isPreRelease: false # Optional
      #addChangeLog: true # Optional
      #compareWith: 'lastFullRelease' # Required when addChangeLog == True. Options: lastFullRelease, lastRelease, lastReleaseByTag
      #releaseTag: # Required when compareWith == LastReleaseByTag
