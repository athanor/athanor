
trigger:
  branches:
    include:
    - 'refs/tags/release_v*'
    - master
jobs:
- job: BuildAndTestAthanor
  timeoutInMinutes: 0
  strategy:
    matrix:
      Linux:
        imageName: 'ubuntu-latest'
        os: linux
        compiler: clang++
        conjureFolder: conjure-v2.3.0-linux-ubuntu1604
      Mac:
        imageName: 'macos-latest'
        os: mac
        compiler: clang++
        conjureFolder: conjure-v2.3.0-macos


  pool:
    vmImage: $(imageName)
  steps:
  - bash: CXX=$(compiler) make -j4
    displayName: "Build Athanor"
  - bash: rm -rf temp && mkdir temp && cd temp && wget https://github.com/conjure-cp/conjure/releases/download/v2.3.0/$(conjureFolder).zip && unzip $(conjureFolder).zip
    displayName: "Downloading Conjure"
  - bash: export PATH="$PWD/temp/$(conjureFolder):${PATH}" ; echo "path is $PATH" ; which conjure ; conjure ; cd tests && ./runAll.sh skipSanityCheck useReleaseBuild dumpFilesOnError
    displayName: "Running tests"
  - bash: scripts/makeRelease.sh . $(os) "$conjureFolder/conjure"
    displayName: "Compiling release assets for $(os)"
  - task: CopyFiles@2
    inputs:
      contents: $(os).tar.gz
      targetFolder: $(Build.ArtifactStagingDirectory)
    displayName: "Copying release assets for $(os) to staging directory"


- deployment: ReleaseToGithub
  displayName: Releasing to github
  pool:
    vmImage: 'Ubuntu-16.04'
  environment: 'athanor-production'
  dependsOn: BuildAndTestAthanor
  strategy:
    runOnce:
      deploy:
        steps:
        #better description of arguments found at https://docs.microsoft.com/en-us/azure/devops/pipelines/tasks/utility/github-release?view=azure-devops# GitHub Release
# Create, edit, or delete a GitHub release
        - bash: tag=`git tag -l --points-at HEAD | tail -n1` ; mv $(Build.ArtifactStagingDirectory)/mac.tar.gz $(Build.ArtifactStagingDirectory)/athanor_${tag}_mac.tar.gz ; mv $(Build.ArtifactStagingDirectory)/linux.tar.gz $(Build.ArtifactStagingDirectory)/athanor_${tag}_linux.tar.gz
          condition: startsWith(variables['Build.SourceBranch'], 'refs/tags/release_v')   
          displayName: 'Renaming assets'
        - task: GitHubRelease@0
          displayName: 'Create GitHub Release'      
                  condition: startsWith(variables['Build.SourceBranch'], 'refs/tags/release_v')   
          inputs:
            gitHubConnection: athanor-release
            repositoryName: '$(Build.Repository.Name)' 
            action: 'create' # Options: create, edit, delete
            target: '$(Build.SourceVersion)' # Required when action == Create || Action == Edit
            tagSource: 'auto' # Required when action == Create# Options: auto, manual
            #tagPattern: # Optional
            #tag: # Required when action == Edit || Action == Delete || TagSource == Manual
            #title: # Optional
            releaseNotesSource: 'file' # Optional. Options: file, input
            releaseNotesFile: '$(Build.Repository.LocalPath)/release-notes.txt' # Optional
            #releaseNotes: # Optional
            assets: '$(Build.ArtifactStagingDirectory)/*.tar.gz' # Optional
            #assetUploadMode: 'delete' # Optional. Options: delete, replace
            isDraft: true # Optional
            #isPreRelease: false # Optional
            #addChangeLog: true # Optional
            #compareWith: 'lastFullRelease' # Required when addChangeLog == True. Options: lastFullRelease, lastRelease, lastReleaseByTag
            #releaseTag: # Required when compareWith == LastReleaseByTag
